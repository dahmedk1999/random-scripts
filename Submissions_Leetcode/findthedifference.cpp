#include <string>
using std::string;
/*
You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

 

Example 1:

Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.
Example 2:

Input: s = "", t = "y"
Output: "y"
 

Constraints:

0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lowercase English letters.

Runtime: 8 ms, faster than 17.39% of C++ online submissions for Find the Difference.
Memory Usage: 6.5 MB, less than 87.58% of C++ online submissions for Find the Difference.

*/
class Solution {
public:
    char findTheDifference(string s, string t) {
        for(int i=0;i<t.length();i++)
        {
            if(string::npos==s.find_first_of(t[i]) || std::count(s.begin(),s.end(),t[i])!=std::count(t.begin(),t.end(),t[i]))
            {
                return t[i];
            }
        }
        return '\0';
    }
    //Just add up the ascii values of each character from the string, the leftover difference will be the extraneus  character
    char findTheDifference2(string s, string t) {
            int ans=0;
            for(int i=0;i<s.size();i++)
            {
                ans-=s[i];
                ans+=t[i];
            }
            ans+=t[s.size()];  
            return ans;
        }
};

